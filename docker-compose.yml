version: '3.8'

services:
  api1: &app1
    build:
      context: .
      dockerfile: ./Dockerfile
    hostname: api1
    network_mode: host
    command: >
      sh -c "poetry run alembic upgrade head && poetry run uvicorn rinha_backend.main:app --host 0.0.0.0 --port 8000 --workers 2 --log-level critical"
    environment:
      PORT: 8000
      MAX_CONNECTIONS: 10
    depends_on:
      - db
    deploy:
      resources:
        limits:
          cpus: "0.45"
          memory: "165MB"

  api2:
    <<: *app1
    hostname: api2
    command: 'poetry run uvicorn rinha_backend.main:app --host 0.0.0.0 --port 8001 --workers 2 --log-level critical'
    environment:
      PORT: 8001
      MAX_CONNECTIONS: 10

  db:
    image: docker.io/postgres:16
    volumes:
      - ./db:/docker-entrypoint-initdb.d
    command: postgres -c log_min_messages=FATAL -c max_connections=200 -c shared_buffers=128MB -c fsync=off -c synchronous_commit=off -c checkpoint_timeout=1d -c full_page_writes=false
    network_mode: host
    environment:
      POSTGRES_DB: postgres
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    deploy:
      resources:
        limits:
          cpus: "0.5"
          memory: "180MB"
    restart: always

  nginx:
    image: docker.io/nginx:latest
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      - api1
      - api2
    ports:
      - "9999:9999"
    network_mode: host
    deploy:
      resources:
        limits:
          cpus: "0.10"
          memory: "40MB"
